{
  "name": "propertymastersuk-backend",
  "version": "0.0.1",
  "description": "PropertyMasters UK Backend - Multi-tenant SaaS Property Platform",
  "author": "PropertyMasters UK",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "seed": "ts-node -r tsconfig-paths/register src/database/seeds/seed-runner.ts",
    "simple-seed": "ts-node -r tsconfig-paths/register src/database/seeds/simple-seed.ts",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --config jest.config.dev.js --coverage",
    "test:cov:watch": "jest --config jest.config.dev.js --coverage --watch",
    "test:cov:ci": "jest --config jest.config.ci.js --coverage",
    "test:cov:html": "jest --config jest.config.dev.js --coverage && start coverage/lcov-report/index.html",
    "test:cov:strict": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:integration": "jest --config ./test/jest-integration.json",
    "test:integration:watch": "jest --config ./test/jest-integration.json --watch",
    "test:integration:cov": "jest --config ./test/jest-integration.json --coverage",
    "test:playwright": "playwright test",
    "test:playwright:headed": "playwright test --headed",
    "test:playwright:debug": "playwright test --debug",
    "test:playwright:ui": "playwright test --ui",
    "test:playwright:report": "playwright show-report",
    "test:all": "npm run test && npm run test:integration && npm run test:e2e && npm run test:playwright",
    "test:ci": "npm run test:cov:ci && npm run test:integration:cov && npm run test:e2e && npm run test:playwright",
    "test:docker": "docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit",
    "test:docker:clean": "docker-compose -f docker-compose.test.yml down -v --remove-orphans",
    "test:docker:logs": "docker-compose -f docker-compose.test.yml logs -f",
    "test:unit:ci": "jest --ci --coverage --watchAll=false --passWithNoTests",
    "test:unit:parallel": "jest --maxWorkers=50%",
    "test:unit:silent": "jest --silent",
    "test:unit:verbose": "jest --verbose",
    "test:integration:ci": "jest --config ./test/jest-integration.json --ci --coverage --watchAll=false",
    "test:e2e:ci": "jest --config ./test/jest-e2e.json --ci --watchAll=false",
    "test:playwright:ci": "playwright test --reporter=html,junit",
    "test:smoke": "jest --testNamePattern='smoke' --passWithNoTests",
    "test:regression": "npm run test:unit:ci && npm run test:integration:ci && npm run test:e2e:ci",
    "test:performance": "jest --testNamePattern='performance' --passWithNoTests",
    "test:security": "npm audit --audit-level=high && npm run test:unit:ci",
    "test:coverage:open": "npm run test:cov && start coverage/lcov-report/index.html",
    "test:coverage:check": "jest --coverage --coverageThreshold='{\"global\":{\"branches\":80,\"functions\":80,\"lines\":80,\"statements\":80}}'",
    "test:watch:unit": "jest --watch --testPathPattern='src.*\\.spec\\.ts$'",
    "test:watch:integration": "jest --config ./test/jest-integration.json --watch",
    "test:watch:e2e": "jest --config ./test/jest-e2e.json --watch",
    "test:clean": "rimraf coverage test-results playwright-report",
    "test:setup": "npm run test:clean && npm ci",
    "test:health": "curl -f http://localhost:3000/health || exit 1",
    "pretest:ci": "npm run lint",
    "posttest:ci": "npm run test:coverage:check",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "npm run typeorm -- migration:generate -d src/database/database.config.ts",
    "migration:run": "npm run typeorm -- migration:run -d src/database/database.config.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d src/database/database.config.ts"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/axios": "^4.0.1",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/jwt": "^10.1.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.0.0",
    "@nestjs/schedule": "^4.0.0",
    "@nestjs/swagger": "^7.4.2",
    "@nestjs/throttler": "^5.2.0",
    "@nestjs/typeorm": "^10.0.0",
    "@nestjs/websockets": "^10.0.0",
    "@sendgrid/mail": "^8.1.0",
    "@sentry/nestjs": "^10.10.0",
    "@sentry/node": "^10.10.0",
    "@types/archiver": "^6.0.3",
    "@types/bcrypt": "^6.0.0",
    "archiver": "^7.0.1",
    "aws-sdk": "^2.1691.0",
    "axios": "^1.12.2",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cls-hooked": "^4.2.2",
    "csv-parser": "^3.2.0",
    "express-rate-limit": "^8.1.0",
    "express-winston": "^4.2.0",
    "handlebars": "^4.7.8",
    "helmet": "^7.2.0",
    "joi": "^18.0.1",
    "multer": "^1.4.5-lts.1",
    "nest-winston": "^1.10.2",
    "node-cache": "^5.1.2",
    "nodemailer": "^6.9.8",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.3",
    "redis": "^4.6.7",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "sharp": "^0.34.3",
    "socket.io": "^4.7.4",
    "stripe": "^14.12.0",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.17",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@playwright/test": "^1.55.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/multer": "^2.0.0",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.14",
    "@types/passport-jwt": "^3.0.9",
    "@types/passport-local": "^1.0.35",
    "@types/pg": "^8.10.2",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "rimraf": "^5.0.5",
    "source-map-support": "^0.5.21",
    "sqlite3": "^5.1.7",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.1.0",
    "typescript": "^5.1.3"
  }
}
